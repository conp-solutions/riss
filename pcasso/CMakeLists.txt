# Project definitions:
# 
project(pcasso)


# Dependencies:
# 


# Libraries:
#


message(STATUS "CMAKE_SOURCE_DIR: ${CMAKE_SOURCE_DIR}")

set(LIB_SOURCES
    LevelPool.cc
    LookaheadSplitting.cc
    Master.cc
    PartitionTree.cc
    SolverPT.cc
    SolverRiss.cc
    SolverPriss.cc
    shared_pool.cc
    vsidsSplitting.cc
    # special case - this is an autogenerated file
    ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/version.cc)

add_library(${PROJECT_NAME}-lib-static STATIC ${LIB_SOURCES})
add_library(${PROJECT_NAME}-lib-shared SHARED ${LIB_SOURCES})

set_target_properties(${PROJECT_NAME}-lib-static PROPERTIES
                                                 OUTPUT_NAME "${PROJECT_NAME}"
                                                 COMPILE_FLAGS "-DPCASSO")
set_target_properties(${PROJECT_NAME}-lib-shared PROPERTIES
                                                 OUTPUT_NAME "${PROJECT_NAME}" 
                                                 COMPILE_FLAGS "-DPCASSO"
                                                 VERSION ${VERSION}
                                                 SOVERSION ${SOVERSION})

# Check if the source code is under version control
if(GIT_FOUND AND EXISTS "${CMAKE_SOURCE_DIR}/.git/")
    message(STATUS "Build signature from git")

    # Custom version target that is always built, because it DEPENDS on a file (string)
    # that does not exist
    add_custom_target(${PROJECT_NAME}-version
                      # build_version_file is nothing more than a unique string
                      DEPENDS ${PROJECT_NAME}-build_version_file)

    # Tell CMake how to build the "build_version_file" on which the target "version"
    # depends on. On this way we will also create the version.cc file
    add_custom_command(OUTPUT ${PROJECT_NAME}-build_version_file ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/version.cc
                       COMMENT "Build version file for ${PROJECT_NAME}"
                       COMMAND ${CMAKE_COMMAND} -D PROJECT_NAME=${PROJECT_NAME}
                                                -D OUTPUT=${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/version.cc
                                                -D GIT_DIR=${CMAKE_SOURCE_DIR}
                                                -P ${CMAKE_CURRENT_SOURCE_DIR}/version.cmake)


    # explicitly say that the libraries depends on the version
    add_dependencies(${PROJECT_NAME}-lib-shared version)
    add_dependencies(${PROJECT_NAME}-lib-static version)
endif()

# Executables:
# 
add_executable(${PROJECT_NAME} Main.cc)

set_target_properties(${PROJECT_NAME} PROPERTIES
                                      COMPILE_FLAGS "-DPCASSO")

if(STATIC_BINARIES)
  target_link_libraries(${PROJECT_NAME} ${PROJECT_NAME}-lib-static riss-pcasso-lib-static pfolio-lib-static coprocessor-lib-static)
else()
  target_link_libraries(${PROJECT_NAME} ${PROJECT_NAME}-lib-shared riss-pcasso-lib-shared pfolio-lib-shared coprocessor-lib-shared)
endif()

# Installation:
# 
install(TARGETS ${PROJECT_NAME}-lib-static ${PROJECT_NAME}-lib-shared ${PROJECT_NAME}
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib)

install(DIRECTORY ${PROJECT_NAME}
        DESTINATION include/${PROJECT_NAME}
        FILES_MATCHING PATTERN "*.h")
