#include <vector>
#include <string>

using namespace std;
typedef pair<int, string> identity;
const int amountClassesCC = 14;
const int dimensionCC = 372;
const int solvedCC = 1953;
const vector<string> classNamesCC = { 
	"505-M",
	"505-N",
	"505-O",
	"505-P",
	"505-Q",
	"505-R",
	"505-S",
	"505-A",
	"505-T",
	"505-U",
	"505-W",
	"505-D",
	"505-F",
	"505-H"
 };
const vector<identity> featureIdentsCC = {
	{1, "clauses"},
	{2, "vars"},
	{3, "clauses_size_1"},
	{4, "clauses_size_2"},
	{5, "clauses_size_3"},
	{6, "clauses_size_4"},
	{7, "clauses_size_5"},
	{8, "clauses_size_6"},
	{9, "clauses_size_7"},
	{10, "clauses_size_8"},
	{11, "clauses_size_>=_9"},
	{12, "horn_clauses"},
	{13, "clause-variable_degree_min"},
	{14, "clause-variable_degree_max"},
	{15, "clause-variable_degree_mode"},
	{16, "clause-variable_degree_mean"},
	{17, "clause-variable_degree_stdev"},
	{18, "clause-variable_degree_entropy"},
	{19, "clause-variable_degree_valuesRate"},
	{20, "clause-variable_degree_Q1"},
	{21, "clause-variable_degree_Q2"},
	{22, "clause-variable_degree_Q3"},
	{23, "clause-variable_degree_derivative_zcount"},
	{24, "clause-variable_degree_derivative_min"},
	{25, "clause-variable_degree_derivative_max"},
	{26, "clause-variable_degree_derivative_mode"},
	{27, "clause-variable_degree_derivative_mean"},
	{28, "clause-variable_degree_derivative_stdev"},
	{29, "clause-variable_degree_derivative_entropy"},
	{30, "clause-variable_degree_derivative_valuesRate"},
	{31, "clause-variable_degree_derivative_Q1"},
	{32, "clause-variable_degree_derivative_Q2"},
	{33, "clause-variable_degree_derivative_Q3"},
	{34, "variable-clause_degree_zcount"},
	{35, "variable-clause_degree_min"},
	{36, "variable-clause_degree_max"},
	{37, "variable-clause_degree_mode"},
	{38, "variable-clause_degree_mean"},
	{39, "variable-clause_degree_stdev"},
	{40, "variable-clause_degree_entropy"},
	{41, "variable-clause_degree_valuesRate"},
	{42, "variable-clause_degree_Q1"},
	{43, "variable-clause_degree_Q2"},
	{44, "variable-clause_degree_Q3"},
	{45, "variable-clause_degree_derivative_zcount"},
	{46, "variable-clause_degree_derivative_min"},
	{47, "variable-clause_degree_derivative_max"},
	{48, "variable-clause_degree_derivative_mode"},
	{49, "variable-clause_degree_derivative_mean"},
	{50, "variable-clause_degree_derivative_stdev"},
	{51, "variable-clause_degree_derivative_entropy"},
	{52, "variable-clause_degree_derivative_valuesRate"},
	{53, "variable-clause_degree_derivative_Q1"},
	{54, "variable-clause_degree_derivative_Q2"},
	{55, "variable-clause_degree_derivative_Q3"},
	{56, "clause-variable_polarity_min"},
	{57, "clause-variable_polarity_max"},
	{58, "clause-variable_polarity_mode"},
	{59, "clause-variable_polarity_mean"},
	{60, "clause-variable_polarity_stdev"},
	{61, "clause-variable_polarity_entropy"},
	{62, "clause-variable_polarity_valuesRate"},
	{63, "clause-variable_polarity_Q1"},
	{64, "clause-variable_polarity_Q2"},
	{65, "clause-variable_polarity_Q3"},
	{66, "clause-variable_polarity_derivative_zcount"},
	{67, "clause-variable_polarity_derivative_min"},
	{68, "clause-variable_polarity_derivative_max"},
	{69, "clause-variable_polarity_derivative_mode"},
	{70, "clause-variable_polarity_derivative_mean"},
	{71, "clause-variable_polarity_derivative_stdev"},
	{72, "clause-variable_polarity_derivative_entropy"},
	{73, "clause-variable_polarity_derivative_valuesRate"},
	{74, "clause-variable_polarity_derivative_Q1"},
	{75, "clause-variable_polarity_derivative_Q2"},
	{76, "clause-variable_polarity_derivative_Q3"},
	{77, "variable-clause_polarity_zcount"},
	{78, "variable-clause_polarity_min"},
	{79, "variable-clause_polarity_max"},
	{80, "variable-clause_polarity_mode"},
	{81, "variable-clause_polarity_mean"},
	{82, "variable-clause_polarity_stdev"},
	{83, "variable-clause_polarity_entropy"},
	{84, "variable-clause_polarity_valuesRate"},
	{85, "variable-clause_polarity_Q1"},
	{86, "variable-clause_polarity_Q2"},
	{87, "variable-clause_polarity_Q3"},
	{88, "variable-clause_polarity_derivative_zcount"},
	{89, "variable-clause_polarity_derivative_min"},
	{90, "variable-clause_polarity_derivative_max"},
	{91, "variable-clause_polarity_derivative_mode"},
	{92, "variable-clause_polarity_derivative_mean"},
	{93, "variable-clause_polarity_derivative_stdev"},
	{94, "variable-clause_polarity_derivative_entropy"},
	{95, "variable-clause_polarity_derivative_valuesRate"},
	{96, "variable-clause_polarity_derivative_Q1"},
	{97, "variable-clause_polarity_derivative_Q2"},
	{98, "variable-clause_polarity_derivative_Q3"},
	{100, "Clause-Var_steps"},
	{101, "bin_implication_graph_degree_zcount"},
	{102, "bin_implication_graph_degree_min"},
	{103, "bin_implication_graph_degree_max"},
	{104, "bin_implication_graph_degree_mode"},
	{105, "bin_implication_graph_degree_mean"},
	{106, "bin_implication_graph_degree_stdev"},
	{107, "bin_implication_graph_degree_entropy"},
	{108, "bin_implication_graph_degree_valuesRate"},
	{109, "bin_implication_graph_degree_Q1"},
	{110, "bin_implication_graph_degree_Q2"},
	{111, "bin_implication_graph_degree_Q3"},
	{112, "bin_implication_graph_degree_derivative_zcount"},
	{113, "bin_implication_graph_degree_derivative_min"},
	{114, "bin_implication_graph_degree_derivative_max"},
	{115, "bin_implication_graph_degree_derivative_mode"},
	{116, "bin_implication_graph_degree_derivative_mean"},
	{117, "bin_implication_graph_degree_derivative_stdev"},
	{118, "bin_implication_graph_degree_derivative_entropy"},
	{119, "bin_implication_graph_degree_derivative_valuesRate"},
	{120, "bin_implication_graph_degree_derivative_Q1"},
	{121, "bin_implication_graph_degree_derivative_Q2"},
	{122, "bin_implication_graph_degree_derivative_Q3"},
	{123, "Bin_Implication_graph_steps"},
	{125, "Exactly1Lit_zcount"},
	{126, "Exactly1Lit_min"},
	{127, "Exactly1Lit_max"},
	{128, "Exactly1Lit_mode"},
	{129, "Exactly1Lit_mean"},
	{130, "Exactly1Lit_stdev"},
	{131, "Exactly1Lit_entropy"},
	{132, "Exactly1Lit_valuesRate"},
	{133, "Exactly1Lit_Q1"},
	{134, "Exactly1Lit_Q2"},
	{135, "Exactly1Lit_Q3"},
	{136, "Exactly1Lit_derivative_zcount"},
	{137, "Exactly1Lit_derivative_min"},
	{138, "Exactly1Lit_derivative_max"},
	{139, "Exactly1Lit_derivative_mode"},
	{140, "Exactly1Lit_derivative_mean"},
	{141, "Exactly1Lit_derivative_stdev"},
	{142, "Exactly1Lit_derivative_entropy"},
	{143, "Exactly1Lit_derivative_valuesRate"},
	{144, "Exactly1Lit_derivative_Q1"},
	{145, "Exactly1Lit_derivative_Q2"},
	{146, "Exactly1Lit_derivative_Q3"},
	{147, "Exactly1Lit_steps"},
	{148, "Full_AND_gate_degree_zcount"},
	{149, "Full_AND_gate_degree_min"},
	{150, "Full_AND_gate_degree_max"},
	{151, "Full_AND_gate_degree_mode"},
	{152, "Full_AND_gate_degree_mean"},
	{153, "Full_AND_gate_degree_stdev"},
	{154, "Full_AND_gate_degree_entropy"},
	{155, "Full_AND_gate_degree_valuesRate"},
	{156, "Full_AND_gate_degree_Q1"},
	{157, "Full_AND_gate_degree_Q2"},
	{158, "Full_AND_gate_degree_Q3"},
	{159, "Full_AND_gate_degree_derivative_zcount"},
	{160, "Full_AND_gate_degree_derivative_min"},
	{161, "Full_AND_gate_degree_derivative_max"},
	{162, "Full_AND_gate_degree_derivative_mode"},
	{163, "Full_AND_gate_degree_derivative_mean"},
	{164, "Full_AND_gate_degree_derivative_stdev"},
	{165, "Full_AND_gate_degree_derivative_entropy"},
	{166, "Full_AND_gate_degree_derivative_valuesRate"},
	{167, "Full_AND_gate_degree_derivative_Q1"},
	{168, "Full_AND_gate_degree_derivative_Q2"},
	{169, "Full_AND_gate_degree_derivative_Q3"},
	{170, "Full_AND_gate_weights_min"},
	{171, "Full_AND_gate_weights_max"},
	{172, "Full_AND_gate_weights_mode"},
	{173, "Full_AND_gate_weights_mean"},
	{174, "Full_AND_gate_weights_stdev"},
	{175, "Full_AND_gate_weights_entropy"},
	{176, "Full_AND_gate_weights_valuesRate"},
	{177, "Full_AND_gate_weights_Q1"},
	{178, "Full_AND_gate_weights_Q2"},
	{179, "Full_AND_gate_weights_Q3"},
	{180, "Full_AND_gate_weights_derivative_zcount"},
	{181, "Full_AND_gate_weights_derivative_min"},
	{182, "Full_AND_gate_weights_derivative_max"},
	{183, "Full_AND_gate_weights_derivative_mode"},
	{184, "Full_AND_gate_weights_derivative_mean"},
	{185, "Full_AND_gate_weights_derivative_stdev"},
	{186, "Full_AND_gate_weights_derivative_entropy"},
	{187, "Full_AND_gate_weights_derivative_valuesRate"},
	{188, "Full_AND_gate_weights_derivative_Q1"},
	{189, "Full_AND_gate_weights_derivative_Q2"},
	{190, "Full_AND_gate_weights_derivative_Q3"},
	{191, "Full_AND_gate_steps"},
	{192, "Blocked_AND_gate_degree_zcount"},
	{193, "Blocked_AND_gate_degree_min"},
	{194, "Blocked_AND_gate_degree_max"},
	{195, "Blocked_AND_gate_degree_mode"},
	{196, "Blocked_AND_gate_degree_mean"},
	{197, "Blocked_AND_gate_degree_stdev"},
	{198, "Blocked_AND_gate_degree_entropy"},
	{199, "Blocked_AND_gate_degree_valuesRate"},
	{200, "Blocked_AND_gate_degree_Q1"},
	{201, "Blocked_AND_gate_degree_Q2"},
	{202, "Blocked_AND_gate_degree_Q3"},
	{203, "Blocked_AND_gate_degree_derivative_zcount"},
	{204, "Blocked_AND_gate_degree_derivative_min"},
	{205, "Blocked_AND_gate_degree_derivative_max"},
	{206, "Blocked_AND_gate_degree_derivative_mode"},
	{207, "Blocked_AND_gate_degree_derivative_mean"},
	{208, "Blocked_AND_gate_degree_derivative_stdev"},
	{209, "Blocked_AND_gate_degree_derivative_entropy"},
	{210, "Blocked_AND_gate_degree_derivative_valuesRate"},
	{211, "Blocked_AND_gate_degree_derivative_Q1"},
	{212, "Blocked_AND_gate_degree_derivative_Q2"},
	{213, "Blocked_AND_gate_degree_derivative_Q3"},
	{214, "Blocked_AND_gate_weights_min"},
	{215, "Blocked_AND_gate_weights_max"},
	{216, "Blocked_AND_gate_weights_mode"},
	{217, "Blocked_AND_gate_weights_mean"},
	{218, "Blocked_AND_gate_weights_stdev"},
	{219, "Blocked_AND_gate_weights_entropy"},
	{220, "Blocked_AND_gate_weights_valuesRate"},
	{221, "Blocked_AND_gate_weights_Q1"},
	{222, "Blocked_AND_gate_weights_Q2"},
	{223, "Blocked_AND_gate_weights_Q3"},
	{224, "Blocked_AND_gate_weights_derivative_zcount"},
	{225, "Blocked_AND_gate_weights_derivative_min"},
	{226, "Blocked_AND_gate_weights_derivative_max"},
	{227, "Blocked_AND_gate_weights_derivative_mode"},
	{228, "Blocked_AND_gate_weights_derivative_mean"},
	{229, "Blocked_AND_gate_weights_derivative_stdev"},
	{230, "Blocked_AND_gate_weights_derivative_entropy"},
	{231, "Blocked_AND_gate_weights_derivative_valuesRate"},
	{232, "Blocked_AND_gate_weights_derivative_Q1"},
	{233, "Blocked_AND_gate_weights_derivative_Q2"},
	{234, "Blocked_AND_gate_weights_derivative_Q3"},
	{235, "Blocked_AND_gate_steps"},
	{237, "SymmTime0_zcount"},
	{238, "SymmTime0_min"},
	{239, "SymmTime0_max"},
	{240, "SymmTime0_mode"},
	{241, "SymmTime0_mean"},
	{242, "SymmTime0_stdev"},
	{243, "SymmTime0_entropy"},
	{244, "SymmTime0_valuesRate"},
	{245, "SymmTime0_Q1"},
	{246, "SymmTime0_Q2"},
	{247, "SymmTime0_Q3"},
	{248, "SymmTime0_derivative_zcount"},
	{249, "SymmTime0_derivative_min"},
	{250, "SymmTime0_derivative_max"},
	{251, "SymmTime0_derivative_mode"},
	{252, "SymmTime0_derivative_mean"},
	{253, "SymmTime0_derivative_stdev"},
	{254, "SymmTime0_derivative_entropy"},
	{255, "SymmTime0_derivative_valuesRate"},
	{256, "SymmTime0_derivative_Q1"},
	{257, "SymmTime0_derivative_Q2"},
	{258, "SymmTime0_derivative_Q3"},
	{259, "Symmetry0_steps"},
	{260, "SymmTime1_zcount"},
	{261, "SymmTime1_min"},
	{262, "SymmTime1_max"},
	{263, "SymmTime1_mode"},
	{264, "SymmTime1_mean"},
	{265, "SymmTime1_stdev"},
	{266, "SymmTime1_entropy"},
	{267, "SymmTime1_valuesRate"},
	{268, "SymmTime1_Q1"},
	{269, "SymmTime1_Q2"},
	{270, "SymmTime1_Q3"},
	{271, "SymmTime1_derivative_zcount"},
	{272, "SymmTime1_derivative_min"},
	{273, "SymmTime1_derivative_max"},
	{274, "SymmTime1_derivative_mode"},
	{275, "SymmTime1_derivative_mean"},
	{276, "SymmTime1_derivative_stdev"},
	{277, "SymmTime1_derivative_entropy"},
	{278, "SymmTime1_derivative_valuesRate"},
	{279, "SymmTime1_derivative_Q1"},
	{280, "SymmTime1_derivative_Q2"},
	{281, "SymmTime1_derivative_Q3"},
	{282, "Symmetry1_steps"},
	{283, "SymmTime2_zcount"},
	{284, "SymmTime2_min"},
	{285, "SymmTime2_max"},
	{286, "SymmTime2_mode"},
	{287, "SymmTime2_mean"},
	{288, "SymmTime2_stdev"},
	{289, "SymmTime2_entropy"},
	{290, "SymmTime2_valuesRate"},
	{291, "SymmTime2_Q1"},
	{292, "SymmTime2_Q2"},
	{293, "SymmTime2_Q3"},
	{294, "SymmTime2_derivative_zcount"},
	{295, "SymmTime2_derivative_min"},
	{296, "SymmTime2_derivative_max"},
	{297, "SymmTime2_derivative_mode"},
	{298, "SymmTime2_derivative_mean"},
	{299, "SymmTime2_derivative_stdev"},
	{300, "SymmTime2_derivative_entropy"},
	{301, "SymmTime2_derivative_valuesRate"},
	{302, "SymmTime2_derivative_Q1"},
	{303, "SymmTime2_derivative_Q2"},
	{304, "SymmTime2_derivative_Q3"},
	{305, "Symmetry2_steps"},
	{307, "Symmetry_computation_steps"},
	{308, "RWH-1_zcount"},
	{309, "RWH-1_min"},
	{310, "RWH-1_max"},
	{311, "RWH-1_mode"},
	{312, "RWH-1_mean"},
	{313, "RWH-1_stdev"},
	{314, "RWH-1_entropy"},
	{315, "RWH-1_valuesRate"},
	{316, "RWH-1_Q1"},
	{317, "RWH-1_Q2"},
	{318, "RWH-1_Q3"},
	{319, "RWH-1_derivative_zcount"},
	{320, "RWH-1_derivative_min"},
	{321, "RWH-1_derivative_max"},
	{322, "RWH-1_derivative_mode"},
	{323, "RWH-1_derivative_mean"},
	{324, "RWH-1_derivative_stdev"},
	{325, "RWH-1_derivative_entropy"},
	{326, "RWH-1_derivative_valuesRate"},
	{327, "RWH-1_derivative_Q1"},
	{328, "RWH-1_derivative_Q2"},
	{329, "RWH-1_derivative_Q3"},
	{330, "RWH-1steps"},
	{331, "RWH-2_zcount"},
	{332, "RWH-2_min"},
	{333, "RWH-2_max"},
	{334, "RWH-2_mode"},
	{335, "RWH-2_mean"},
	{336, "RWH-2_stdev"},
	{337, "RWH-2_entropy"},
	{338, "RWH-2_valuesRate"},
	{339, "RWH-2_Q1"},
	{340, "RWH-2_Q2"},
	{341, "RWH-2_Q3"},
	{342, "RWH-2_derivative_zcount"},
	{343, "RWH-2_derivative_min"},
	{344, "RWH-2_derivative_max"},
	{345, "RWH-2_derivative_mode"},
	{346, "RWH-2_derivative_mean"},
	{347, "RWH-2_derivative_stdev"},
	{348, "RWH-2_derivative_entropy"},
	{349, "RWH-2_derivative_valuesRate"},
	{350, "RWH-2_derivative_Q1"},
	{351, "RWH-2_derivative_Q2"},
	{352, "RWH-2_derivative_Q3"},
	{353, "RWH-2steps"},
	{354, "RWH-3_zcount"},
	{355, "RWH-3_min"},
	{356, "RWH-3_max"},
	{357, "RWH-3_mode"},
	{358, "RWH-3_mean"},
	{359, "RWH-3_stdev"},
	{360, "RWH-3_entropy"},
	{361, "RWH-3_valuesRate"},
	{362, "RWH-3_Q1"},
	{363, "RWH-3_Q2"},
	{364, "RWH-3_Q3"},
	{365, "RWH-3_derivative_zcount"},
	{366, "RWH-3_derivative_min"},
	{367, "RWH-3_derivative_max"},
	{368, "RWH-3_derivative_mode"},
	{369, "RWH-3_derivative_mean"},
	{370, "RWH-3_derivative_stdev"},
	{371, "RWH-3_derivative_entropy"},
	{372, "RWH-3_derivative_valuesRate"},
	{373, "RWH-3_derivative_Q1"},
	{374, "RWH-3_derivative_Q2"},
	{375, "RWH-3_derivative_Q3"},
	{376, "RWH-3steps"}
};
const vector<int> allClassCC = { 
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	8,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	4,
	2,
	2,
	2,
	2,
	3,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	5,
	2,
	2,
	2,
	2,
	2,
	8,
	2,
	2,
	9,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	9,
	8,
	2,
	2,
	10,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	5,
	3,
	0,
	5,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	1,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	6,
	2,
	2,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	1,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	9,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	9,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	5,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	3,
	10,
	10,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	3,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	0,
	2,
	2,
	2,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	9,
	4,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	3,
	2,
	2,
	2,
	12,
	2,
	2,
	2,
	2,
	2,
	5,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	0,
	2,
	2,
	8,
	9,
	2,
	3,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	4,
	4,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	1,
	2,
	2,
	8,
	0,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	10,
	10,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	10,
	10,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	8,
	8,
	8,
	8,
	6,
	6,
	6,
	8,
	1,
	6,
	8,
	8,
	6,
	6,
	6,
	8,
	8,
	2,
	9,
	9,
	6,
	8,
	2,
	6,
	6,
	6,
	6,
	6,
	2,
	6,
	6,
	6,
	2,
	2,
	2,
	6,
	2,
	8,
	4,
	2,
	2,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	6,
	2,
	8,
	8,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	1,
	2,
	2,
	3,
	4,
	3,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	9,
	6,
	10,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	1,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	0,
	2,
	2,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	8,
	2,
	2,
	2,
	8,
	8,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	8,
	2,
	6,
	2,
	2,
	2,
	6,
	2,
	6,
	10,
	6,
	6,
	8,
	8,
	9,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	6,
	6,
	2,
	8,
	8,
	2,
	2,
	2,
	6,
	9,
	8,
	9,
	2,
	2,
	9,
	6,
	2,
	2,
	2,
	2,
	9,
	8,
	6,
	10,
	6,
	2,
	8,
	9,
	9,
	2,
	2,
	2,
	8,
	2,
	10,
	2,
	10,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	8,
	2,
	2,
	2,
	8,
	8,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	8,
	2,
	6,
	2,
	2,
	2,
	6,
	2,
	6,
	2,
	6,
	9,
	8,
	8,
	9,
	6,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	6,
	6,
	2,
	9,
	8,
	2,
	2,
	2,
	6,
	9,
	8,
	9,
	2,
	2,
	9,
	6,
	2,
	2,
	2,
	2,
	9,
	8,
	6,
	10,
	6,
	2,
	8,
	9,
	9,
	2,
	2,
	2,
	8,
	2,
	10,
	2,
	10,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	5,
	10,
	2,
	2,
	2,
	8,
	2,
	2,
	2,
	2,
	2,
	2,
	0,
	8,
	8,
	6,
	2,
	5,
	2,
	1,
	5,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2,
	2
 };
const vector<double> divisorsCC = { 
	9.71339e+06,
	1.98735e+06,
	282548,
	4.1978e+06,
	5.78269e+06,
	2.9238e+06,
	847770,
	742661,
	434778,
	319248,
	1.19913e+06,
	9.71052e+06,
	6,
	3625,
	10,
	20.7869,
	545.644,
	2.85736,
	0.0265487,
	8,
	14,
	46,
	9.71338e+06,
	9,
	720,
	9,
	162.667,
	77924.3,
	2.52768,
	1,
	9,
	33,
	265,
	13356,
	1048,
	150648,
	1675,
	1607.14,
	3.12392e+07,
	5.72977,
	0.82,
	1445,
	1615,
	2554,
	1.98655e+06,
	8,
	120033,
	10,
	2353.86,
	2.36972e+08,
	3.48795,
	1,
	8,
	13,
	4049,
	1,
	1,
	1,
	1,
	0.0623342,
	2.60309,
	0.0265487,
	1,
	1,
	1,
	9.71338e+06,
	0.333333,
	0.470588,
	0.333333,
	0.333333,
	0.0252778,
	6.93072,
	1,
	0.333333,
	0.333333,
	0.333333,
	1,
	0.933333,
	1,
	1,
	0.956824,
	0.0523579,
	6.44282,
	0.99,
	1,
	1,
	1,
	1.98565e+06,
	0.0714286,
	0.45,
	0.0714286,
	0.166667,
	0.0412925,
	7.99957,
	1,
	0.0925373,
	0.15,
	0.428571,
	5.08768e+07,
	1.36138e+06,
	56,
	49986,
	140,
	129.569,
	278430,
	5.03257,
	0.145,
	140,
	140,
	153,
	2.97943e+06,
	2,
	27291,
	4,
	847.203,
	1.6281e+07,
	3.08671,
	1,
	2,
	6,
	138,
	1.20221e+07,
	3.9747e+06,
	70,
	288,
	70,
	70,
	1361.68,
	3.33678,
	0.333333,
	70,
	70,
	70,
	151154,
	22,
	284,
	22,
	143,
	39762,
	1.90615,
	1,
	22,
	22,
	22,
	4.3807e+07,
	3.20522e+06,
	31,
	49986,
	50,
	189.732,
	475796,
	4.74413,
	0.25,
	47,
	52,
	95,
	2.09095e+06,
	1013,
	27271,
	1013,
	1013,
	1.87149e+07,
	3.12609,
	1,
	1013,
	1013,
	1013,
	0.25,
	0.25,
	0.25,
	0.25,
	0.0156,
	5.41923,
	0.1,
	0.25,
	0.25,
	0.25,
	4.12436e+06,
	0.25,
	0.25,
	0.25,
	0.25,
	0.0311585,
	6.12468,
	1,
	0.25,
	0.25,
	0.25,
	4.38735e+07,
	3.97275e+06,
	1,
	2478,
	32,
	23.1913,
	8507.1,
	1.35743,
	0.666667,
	1,
	32,
	32,
	19232,
	255,
	1248,
	255,
	287.75,
	307938,
	2.67001,
	1,
	255,
	255,
	1120,
	0.25,
	0.25,
	0.25,
	0.25,
	0.010952,
	2.83267,
	0.5,
	0.25,
	0.25,
	0.25,
	76198,
	0.246094,
	0.249992,
	0.246094,
	0.246094,
	0.0312462,
	3.43399,
	1,
	0.246094,
	0.246094,
	0.246094,
	4.3807e+07,
	1,
	300,
	1.57012e+06,
	464,
	159074,
	1.26365e+11,
	5.15826,
	1,
	888,
	1256,
	7370,
	21322,
	72,
	1.447e+06,
	401,
	264990,
	2.10349e+11,
	3.74656,
	1,
	384,
	1202,
	65606,
	3.61267e+07,
	1,
	300,
	628092,
	512,
	113624,
	3.76023e+10,
	4.1085,
	1,
	300,
	512,
	1136,
	220525,
	35,
	459155,
	64,
	79497.4,
	3.152e+10,
	3.41296,
	1,
	36,
	128,
	2744,
	3.6158e+07,
	1,
	300,
	397488,
	300,
	88374.3,
	2.08373e+10,
	3.73467,
	1,
	300,
	300,
	198728,
	313398,
	892,
	244532,
	892,
	56783.9,
	9.37761e+09,
	3.1324,
	1,
	892,
	892,
	1988,
	3.62378e+07,
	1.08522e+08,
	565096,
	2602,
	6.51185e+06,
	10913,
	12802,
	2.12657e+09,
	6.3156,
	0.75875,
	2702,
	22800,
	22900,
	3.8101e+06,
	1749,
	3.1045e+06,
	1749,
	47881.1,
	1.20448e+11,
	4.55041,
	1,
	1749,
	1749,
	1749,
	3.79363e+07,
	1,
	6.51886e+11,
	1e+201,
	1e+201,
	4.20807e+200,
	2.08226e+193,
	12.111,
	1,
	4.28018e+14,
	1.24507e+27,
	1e+201,
	3.84128e+06,
	6.45725e+07,
	1e+201,
	6.45725e+07,
	3.7037e+199,
	5.65203e+193,
	12.4831,
	1,
	1.26654e+14,
	8.64388e+24,
	3.23859e+48,
	3.78858e+07,
	565096,
	1e+201,
	1e+201,
	1e+201,
	1e+201,
	1.47947e+60,
	419,
	15098,
	1e+201,
	1e+201,
	1e+201,
	3.81239e+06,
	5228.55,
	1e+201,
	9448,
	1.47059e+199,
	1.19095e+60,
	20672,
	15098,
	5228.55,
	9121,
	5228.55,
	3.79788e+07
 };
