File describing this directory in Minisat development. Please add comments about single object implementations here!


New version of the preprocessor Coprocessor is developped here.

The class is a friend class of the class Minisat, so that it has access to all its structures.

The data that is used to handle all clauses, literal counts, ... is implemented in the file CoprocessorTypes.h. The corresponding object should be passed to preprocessing methods, so that they have full access to all members of the structure.

Simplification methods, that should be integrated into Coprocessor shoud be implemented into an extra class (e.g. subsumption, variable elimination, ... ). Since the data about the formula is handled in an extra object, it could be passed to each technique separately without the single techniques knowing each other. Each technique implementation shoud decide by itself which objects should be stored permamnently (working queues), and which elements should be created only for performing the technique ones. Run time statistics should be implemented into the class of the specific technique.

A global interface that should be implemented by each solving technique will come soon.




Class descriptions:

Coprocessor:
Major preprocessor class, represents the interface between preprocessor and solver class

CoprocessorData:
Represents all clauses and related data for all preprocessing techniques
Should provide methods for accessing this data, adding/deleting clauses from occurrence lists, updating counters, ...

Subsumption:
Clas that implements subsumption and strengthening. Queues for the two techniques should be provided and cleared only on request. There should be methods that can be used to add more clauses to the queues, so that they can be used by other techniques (e.g. variable elimination).
